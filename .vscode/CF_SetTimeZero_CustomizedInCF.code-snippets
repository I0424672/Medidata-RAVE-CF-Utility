{
    "CF_codesnippets": {
        "prefix": "CF_SetTimeZero_CustomizedInCF",
        "body": [
            "   /*",
            "    @ Classification: Dynamism",
            "    @ Introduction: Set time zero based on both architect settings and custom days",
            "    @ Dpt_action: Dpt_action (check action) should be the field which required to set time zero",
            "    @ Note: FolderOIDs should list a series of folders OID to set calendar;",
            "    ADDDAYS should be custom days to set between two folders (ex: \"2\" is the days between \"xx2\" and \"xx1\")",
            "    */",
            "",
            "    ActionFunctionParams afp = (ActionFunctionParams)ThisObject;",
            "    DataPoint Dpt_action = afp.ActionDataPoint;",
            "    Subject current_subject = Dpt_action.Record.Subject;",
            "    Instances all_ins = current_subject.Instances;",
            "    bool flag = true;",
            "",
            "    string VISDAT_OID = \"VISDAT\";",
            "    string VIS_PAGE_OID = \"SV_01\";",
            "    string[] FolderOIDs = { \"xx1\", \"xx2\", \"xx3\" };",
            "    int[] ADDdays = { 1, 2, 3 };",
            "",
            "    try",
            "    {",
            "        for (int i = 0; i < FolderOIDs.Length; i++)",
            "        {",
            "            DataPoint VIS_dpt = current_subject.Instances.FindByFolderOID(FolderOIDs[i]).DataPages.FindByFormOID(VIS_PAGE_OID).MasterRecord.DataPoints.FindByFieldOID(VISDAT_OID);",
            "            if (CheckDataPoint(VIS_dpt))",
            "            {",
            "                flag = false;",
            "                break;",
            "            }",
            "        }",
            "",
            "        SetTimeZero(flag, Dpt_action, FolderOIDs, ADDdays, current_subject);",
            "    }",
            "    catch { }",
            "    return null;",
            "}",
            "",
            "public void SetTimeZero(bool flag, DataPoint dpt, String[] FolderOIDs, int[] ADDdays, Subject cur_subj)",
            "{",
            "    if (flag)",
            "    {",
            "        if (CheckDataPoint(dpt))",
            "        {",
            "            for (int i = 0; i < FolderOIDs.Length; i++)",
            "            {",
            "                Instance ins = cur_subj.Instances.FindByFolderOID(FolderOIDs[i]);",
            "                if (ins != null && ins.Active)",
            "                {",
            "                    ins.SetTimeZero(Convert.ToDateTime(dpt.StandardValue()).AddDays(ADDdays[i]));",
            "                }",
            "            }",
            "        }",
            "    }",
            "}",
            "public bool CheckDataPoint(DataPoint dpt)",
            "{",
            "    return dpt != null && dpt.Active && dpt.Data != string.Empty && !dpt.IsDataPointNonConformant;"
        ],
        "description": "A MyCF template for: Calendar - SetTimeZero - Based on  both folder's target days in architect and customized days"
    }
}
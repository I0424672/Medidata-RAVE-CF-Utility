{
    "CF_codesnippets": {
        "prefix": "CF_InactiveForm_InOtherFolder_UntouchedBySystem",
        "body": [
            "   /*",
            "    @ Classification: Dynamism",
            "    @ Introduction: Inactive form in other folder when the field data equals to the specific value.",
            "    @ Dpt_action: Dpt_action (check action) should be the required field",
            "    @ Note: folder_oid and form_oid are Folder OID and Form OID which will be inactivated; Inactive_str is the string value which standard field should be equal to",
            "    */",
            "",
            "    ActionFunctionParams afp = (ActionFunctionParams)ThisObject;",
            "    DataPoint Dpt_action = afp.ActionDataPoint;",
            "    Subject current_subject = Dpt_action.Record.Subject;",
            "    string folder_oid = \"folderOID\";",
            "    string form_oid = \"formOID\";",
            "    string Inactive_str = \"custom value\";",
            "    bool Form_Inactive = false;",
            "    DataPage dpg = null;",
            "",
            "    try",
            "    {",
            "        if (current_subject.Instances.FindByFolderOID(folder_oid) != null)",
            "            dpg = current_subject.Instances.FindByFolderOID(folder_oid).DataPages.FindByFormOID(form_oid);",
            "        Form_Inactive = (CheckDataPoint(Dpt_action) && (Dpt_action.Data == Inactive_str));",
            "        Inactivate_Form(Form_Inactive, dpg);",
            "    }",
            "    catch",
            "    {",
            "    }",
            "    return null;",
            "}",
            "public void Inactivate_Form(bool condition, DataPage dpg)",
            "{",
            "    if (condition)",
            "    {",
            "        if (dpg != null && !IsTouchedBySite(dpg))",
            "            dpg.Active = false;",
            "    }",
            "    else",
            "    {",
            "        if (dpg != null && !dpg.Active)",
            "            dpg.Active = true;",
            "    }",
            "}",
            "public bool CheckDataPoint(DataPoint dpt)",
            "{",
            "    return dpt != null && dpt.Active && dpt.Data != string.Empty && !dpt.IsDataPointNonConformant;",
            "}",
            "//This function is used to check if datapage is touched by site",
            "public bool IsTouchedBySite(DataPage dpg)",
            "{",
            "    bool IsFormTouched = false;",
            "    //If the form is touched then verify if the enterable item is indeed touched",
            "    if (dpg.IsBitSet(Status.IsTouched) && dpg.Active)",
            "    {",
            "        Records recs_cur = dpg.Records;",
            "        for (int i = 0; i < recs_cur.Count && !IsFormTouched; i++)",
            "        {",
            "            DataPoints dps_cur_record = recs_cur.FindByRecordPosition(i).DataPoints;",
            "            for (int j = 0; j < dps_cur_record.Count; j++)",
            "            {",
            "                if (!dps_cur_record[j].Field.RestrictViewsList.Contains(\"Investigator\") && !dps_cur_record[j].Field.RestrictEntriesList.Contains(\"Investigator\") && dps_cur_record[j].IsBitSet(Status.IsTouched))",
            "                {",
            "                    IsFormTouched = true;",
            "                    break;",
            "                }",
            "            }",
            "        }",
            "    }",
            "    return IsFormTouched;"
        ],
        "description": "A MyCF template for: Inactive folder/forms - Inactive form in other folder - When the field data equals to specfic value.(considering if the data is really entered by site)"
    }
}
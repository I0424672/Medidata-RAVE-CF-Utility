{
    "CF_codesnippets": {
        "prefix": "CF_AddLoglineAndSubmitDefaultValue",
        "body": [
            "   /*",
            "    @ Classification: Dynamism",
            "    @ Introduction: update [Form_oids] and [Field_oidsX] to meet the request and [Value] with defult value you want to apply.",
            "    @ Dpt_action: please note this CF should be called in MTX dynamism and will be called once folders are triggered.",
            "    @ Note: Value includs {Folder_oid, Value1, Value2 ...}",
            "    @ Use 'CustomFunction.PerformCustomFunction(\"CALLED_CF\", sbj.CRFVersionID, new object[] {sbj})'once folders are added.",
            "    */",
            "    try",
            "    {",
            "        string[] Form_oids =",
            "        {",
            "             \"PC_BL\", \"PC_BL_50\"",
            "        }",
            "        ;",
            "        string Field_oid1 = \"PCTPT\", Field_oid2 = \"PCREFID\";",
            "        string[,] Value =",
            "        {",
            "            {",
            "                \"70\", \"T0.5H,T2.5H\", \"PK0001,PK0002\"",
            "            }",
            "            ,",
            "            {",
            "                \"80\", \"T0.5H\", \"PK0001\"",
            "            }",
            "            ,",
            "            {",
            "                \"90\", \"T0.5H,T2.5H\", \"PK0001,PK0002\"",
            "            }",
            "        }",
            "        ;",
            "        object[] parameters = (object[])ThisObject;",
            "        Subject sbj = (Subject)parameters[0];",
            "",
            "        for (int i = 0; i < Value.GetLength(0); i++)",
            "        {",
            "            //Get folder oid to find the each folder",
            "            Instance ins = sbj.Instances.FindByFolderOID(Value[i, 0]);",
            "            if (ins != null)",
            "            {",
            "                for (int j = 0; j < Form_oids.Length; j++)",
            "                {",
            "                    DataPage dpg = ins.DataPages.FindByFormOID(Form_oids[j]);",
            "                    if (dpg != null && dpg.Active)",
            "                    {",
            "                        int rd_count = dpg.Records.Count;",
            "                        string[] Value1 = Value[i, 1].Split(',');",
            "                        string[] Value2 = Value[i, 2].Split(',');",
            "                        //Add loglines in the page",
            "                        if (rd_count - 1 < Value1.Length)",
            "                        {",
            "                            for (int k = rd_count - 1; k < Value1.Length; k++)",
            "                            {",
            "                                dpg.AddLogRecord();",
            "                            }",
            "                        }",
            "",
            "                        Records rds = dpg.Records;",
            "                        //Enter data in filed1,2...",
            "                        for (int m = 0; m < Value1.Length; m++)",
            "                        {",
            "                            DataPoint dp1 = rds.FindByRecordPosition(m + 1).DataPoints.FindByFieldOID(Field_oid1);",
            "                            Enter_data(dp1, Value1[m]);",
            "                            DataPoint dp2 = rds.FindByRecordPosition(m + 1).DataPoints.FindByFieldOID(Field_oid2);",
            "                            Enter_data(dp2, Value2[m]);",
            "                        }",
            "                    }",
            "                }",
            "            }",
            "        }",
            "    }",
            "    catch",
            "    {",
            "    }",
            "    return null;",
            "}",
            "public void Enter_data(DataPoint dpt, string value)",
            "{",
            "    if (dpt != null && dpt.Active && dpt.Data == string.Empty)",
            "        dpt.Enter(value, string.Empty, 0);"
        ],
        "description": "A MyCF template for: Submit default value - Submit default value in log field - Add logline and submit default value per visit"
    }
}
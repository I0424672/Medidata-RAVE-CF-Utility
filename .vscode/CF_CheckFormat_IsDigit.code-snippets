{
    "CF_codesnippets": {
        "prefix": "CF_CheckFormat_IsDigit",
        "body": [
            "   /*",
            "    @ Classification: Query",
            "    @ Introduction: check wether the data value is a numerical format (XXX.YY), if not please open query",
            "    @ Dpt_action: Dpt_action (check action) should be the field which required to check format accordingly",
            "    @ Note: Update querytext based on study settings",
            "    Update regex_format as digitals may change ",
            "    */",
            "",
            "    ActionFunctionParams afp = (ActionFunctionParams)ThisObject;",
            "    DataPoint Dpt_action = afp.ActionDataPoint;",
            "    string querytext = \"This field is only numbers allowed (XXX.YY), please check or clarify, thanks.\";",
            "",
            "    try",
            "    {",
            "            CustomFunction.PerformQueryAction(querytext, 1, false, false, Dpt_action, check_numbers(Dpt_action), afp.CheckID, afp.CheckHash);",
            "",
            "",
            "    }",
            "    catch",
            "    {",
            "    }",
            "    return null;",
            "}",
            "",
            "public bool check_numbers(DataPoint Dpt_action)",
            "{",
            "    string regex_format = \"^[0-9]+(.[0-9]{1,3})?$\";",
            "    // \"^([0-9]{m})+(.[0-9]{n1,n2})?$\" {m}{n1,n2}means digitals in integers/decimals, and {n1,n2} could be a range like ({0,2}) to include integer - 2 decimals, please change accordingly to study requirement",
            "",
            "",
            "    bool OQ = true;",
            "    double dint;",
            "",
            "    if (CheckDataPoint(Dpt_action) && Regex.IsMatch(Dpt_action.Data, regex_format))",
            "    {",
            "        OQ = false;",
            "    }",
            "",
            "    return OQ;",
            "}",
            "public bool CheckDataPoint(DataPoint dpt)",
            "{",
            "    return dpt != null && dpt.Active && !string.IsNullOrEmpty(dpt.Data) && !dpt.IsBitSet(Status.IsNonConformant);"
        ],
        "description": "A MyCF template for: Check value format - Could only be numbers - Could only be X.Y digits numbers"
    }
}
{
    "CF_codesnippets": {
        "prefix": "CF_OpenQuery_IsFutureDate_WithUNK",
        "body": [
            "   /*",
            "    @ Classification: Query",
            "    @ Introduction: Check if the date with UNK is future date. Generic CF for Partial Date Field, Future date FEC replacement",
            "    @ Dpt_action: Dpt_action (check action) should be a trigger.",
            "    @ Note: Check date in Dpt_action if is furture date or not.    ",
            "    */        ",
            "    try",
            "    {",
            "        //Variable Decalaration",
            "        string QueryText = \"The Date entered is after today's date. Please update the CRF as appropriate.\";",
            "        ActionFunctionParams afp = (ActionFunctionParams) ThisObject;",
            "        DataPoint Dpt_action = afp.ActionDataPoint;",
            "        int months = 0, years = 0;",
            "        int cur_months = Timezone.LocalTime(Dpt_action.Interaction.TrueUser.TimeZone).Month;",
            "        int cur_years = Timezone.LocalTime(Dpt_action.Interaction.TrueUser.TimeZone).Year;",
            "        bool OpenQuery = false;",
            "        //Variable Declaration",
            "",
            "        //Check if the Dpt_action is empty then check for firing conditions",
            "        if (Dpt_action != null && Dpt_action.Data != string.Empty && !Dpt_action.IsBitSet(Status.IsNonConformant))",
            "        {",
            "            months = ((DateTime) Dpt_action.StandardValue()).Month;",
            "            years = ((DateTime) Dpt_action.StandardValue()).Year;",
            "            //If the Month Contains UNK",
            "            if (Dpt_action.Data.ToUpper().Contains(\"UNK\") && years != 1800)",
            "            {",
            "                OpenQuery = (years > cur_years) ? true : false;",
            "            }",
            "            //if the date contains UN",
            "            else if (Dpt_action.Data.ToUpper().StartsWith(\"UN\") && years != 1800)",
            "            {",
            "                OpenQuery = (years > cur_years) ? true : ((years == cur_years) ? ((months > cur_months) ? true : false) : false);",
            "            }",
            "            else",
            "            {",
            "                OpenQuery = (DateTime) Dpt_action.StandardValue() > Timezone.LocalTime(Dpt_action.Interaction.TrueUser.TimeZone) ? true : false;",
            "            }",
            "        }",
            "        CustomFunction.PerformQueryAction(QueryText, 1, false, false, Dpt_action, OpenQuery, afp.CheckID, afp.CheckHash);",
            "    }",
            "    catch",
            "    {",
            "    }",
            "    return null;"
        ],
        "description": "A MyCF template for: Date Compare - Two date compare to open query - Check if the date with UNK is future date"
    }
}